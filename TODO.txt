- les tags, y a un '_' underscore entre chaque tags
- gestion de la sécurité (empecher de poster si pas logguer) : aussi bien au niveau de la vue (cacher les boutons) qu'au niveau du controleur (forçage d'URL)
- gestion des badges
- empecher à un utilisateur de voter plusieurs fois
- corollaire : changer la couleur d'un vote si l'utilisateur a déjà voté, pour le lui dire justement
- enlever les strings en clair dans les .gsp et utiliser des g:messages à la place
- quand on sauve une question sans tag ça plante
- edit question: pouvoir modifier les tags
- si on passe un mauvais id (lettres, etc.) erreur 500 (http://localhost:8080/outOfBounds/question/edit?question_id=14a)
- gérer les erreurs lors de la création de question etc. (par ex gérer l'erreur quand on va sur http://localhost:8080/outOfBounds/question/saveQuestion)
- regarder pourquoi à la compile on (jutand + pp) a le message "warning... require -Xlint"
- voir quels sont les param?res ?conserver (email, site web, ...)
- v?ifier la validit?des saisies (regex pour mail, ...) et signaler ?l'utilisateur la partie qu'il a mal saisi
- modif des pages d'erreurs? 404 etc.
- ajout de photo à un utilisateur (gravatar?)
- ne pas afficher le body d'une question dans le template, ou le tronquer aux N premiers caractères mais problemes d'encodages (rich editor & cœ)
- écrire les tests...
- supprimer les redirect(uri:) (cf "Ne PAS FAIRE")

Édition / Suppression :
	- édition / suppression d'une question
	- édition d'un commentaire
	- CSS de réponse


Ne PAS faire :
	- redirect(uri: "/question/show?question_id=${answer.question.id}")
		mais 
   		redirect action: show params: ['question_id' : answer.question.id ]
   	- du texte en clair dans les .gsp (utiliser g:message)
